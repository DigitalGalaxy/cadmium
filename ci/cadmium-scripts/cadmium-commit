#! /usr/bin/env python
import os, os.path, sys, subprocess, shutil, re

if not os.path.exists(os.path.expanduser('~/.cadmium/bin/cadmium')):
  print "Please run `cli-install.py` before running `cake deploy`"
  sys.exit(1)

if len(sys.argv) != 3:
  print "Please specify a \"commit message\" and a site url to deploy to.\nUSAGE cadmium-deploy <message> <url>"
  sys.exit(1)

#print "Attempting to update cadmium dependencies. If an update is available this may take a while."

try:
#  status = subprocess.call(['mvn', '-q', 'org.apache.maven.plugins:maven-dependency-plugin:2.4:get', '-Dartifact=com.meltmedia.cadmium:cadmium-cli:LATEST:jar', '-Ddest=' + os.path.expanduser('~/.cadmium/cadmium-cli.jar'), '-Dtransitive=false','-DremoteRepositories=meltmedia-releases::::http://nexus.meltdev.com/content/repositories/releases'])
#  if status != 0:
#    print "Failed to fetch latest cadmium cli"
#    sys.exit(1)

  message = sys.argv[1]
  url = sys.argv[2]

  source_repo_url = "Bamboo" #Bamboo strips remotes from git checkouts -- subprocess.check_output(['git', 'config', '--get', 'remote.origin.url']).strip()
  source_sha = subprocess.check_output(['git', 'rev-parse', 'HEAD']).strip()
  source_branch = subprocess.check_output(['git', 'symbolic-ref', 'HEAD']).strip().split('/')
  if len(source_branch) > 1:
    source_branch = source_branch[len(source_branch) - 1]
  
  source = "{\"repo\":\""+source_repo_url+"\",\"sha\":\""+source_sha+"\",\"branch\":\""+source_branch+"\"}"

  status = subprocess.call(['./node_modules/.bin/docpad', 'generate', '--env=production'])
  if status != 0:
    print "Failed to generate static html"
    sys.exit(1)

  if not os.path.exists('out/META-INF'):
    os.mkdir('out/META-INF')

  if os.path.exists('out/META-INF/source'):
    os.remove('out/META-INF/source')

  fd = open('out/META-INF/source', 'w')
  try:
    fd.write(source)
    fd.flush()
  finally:
    fd.close()

  status = subprocess.call(['cadmium', 'validate', 'out'])
  if status != 0:
    print "Failed to validate source"
    sys.exit(1)

  status = subprocess.call(['cadmium', 'commit', '--quiet-auth', '-m', '"'+message+'"', 'out', url])
  if status != 0:
    print "Failed to commit"
    sys.exit(1)

except subprocess.CalledProcessError:
  print "Please run this command from within a git repository."
  sys.exit(1)
